name: Build

on:
  push:
    branches:
      - main

jobs:
  build-analyze-scan:
    name: Build and Analyze with SonarQube + Trivy + Docker
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for SonarQube analysis

      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@v2.0.2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Trivy File Scan
        run: trivy fs . > trivyfs.txt

      - name: Docker Build and Push
        run: |
          docker build -t tic-tac-toe .
          docker tag tic-tac-toe ashikahammad/tic-tac-toe:latest
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ vars.DOCKERHUB_USERNAME }}" --password-stdin
          docker push ashikahammad/tic-tac-toe:latest
        env:
          DOCKER_CLI_ACI: "1"

      - name: Image Scan Trivy
        run: trivy image ashikahammad/tic-tac-toe:latest > trivyimg.txt

  deploy: 
    needs: build-analyze-scan                               
    runs-on: self-hosted
    
    steps:
      - name: Docker pull image
        run: docker pull ashikahammad/tic-tac-toe:latest

      - name: Image Scan Trivy
        run: trivy image ashikahammad/tic-tac-toe:latest > trivydeployedimg.txt

      - name: Deploy to a container
        run: docker run -d --name tic-tac-toe -p 3000:3000 ashikahammad/tic-tac-toe:latest

      - name: Update KubeConfig 
        run: aws eks --region ap-southeast-1 update-kubeconfig --name EKS_CLOUD

      - name: Deploy to Kubernetes 
        run: kubectl apply -f deployment-service.yml
        
      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#ghaction-eks-project'     
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
